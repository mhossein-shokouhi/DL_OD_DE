# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Final.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from depth_estimation import depth_estimation
from object_detection import object_detection
import shutil

class Ui_MainWindow(QtWidgets.QWidget):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1566, 895)
        MainWindow.setGeometry(50, 50, MainWindow.width(), MainWindow.height())
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("Icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)

        self.img_addr = ""
        self.model_addr = ""

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.input_box = QtWidgets.QGroupBox(self.centralwidget)
        self.input_box.setGeometry(QtCore.QRect(10, 10, 768, 831))
        self.input_box.setAutoFillBackground(False)
        self.input_box.setAlignment(QtCore.Qt.AlignCenter)
        self.input_box.setObjectName("input_box")
        self.input_img = QtWidgets.QLabel(self.input_box)
        self.input_img.setGeometry(QtCore.QRect(64, 50, 640, 480))
        self.input_img.setText("")
        self.input_img.setPixmap(QtGui.QPixmap("empty.png"))
        self.input_img.setScaledContents(True)
        self.input_img.setObjectName("input_img")
        self.load_model_btn = QtWidgets.QPushButton(self.input_box)
        self.load_model_btn.setGeometry(QtCore.QRect(179, 760, 130, 34))
        self.load_model_btn.setObjectName("load_model_btn")
        self.load_img_btn = QtWidgets.QPushButton(self.input_box)
        self.load_img_btn.setGeometry(QtCore.QRect(319, 760, 130, 34))
        self.load_img_btn.setObjectName("load_img_btn")
        self.eval_btn = QtWidgets.QPushButton(self.input_box)
        self.eval_btn.setGeometry(QtCore.QRect(459, 760, 130, 34))
        self.eval_btn.setObjectName("eval_btn")
        self.options_box = QtWidgets.QGroupBox(self.input_box)
        self.options_box.setGeometry(QtCore.QRect(64, 560, 640, 171))
        self.options_box.setAlignment(QtCore.Qt.AlignCenter)
        self.options_box.setObjectName("options_box")
        self.depth_lim_m = QtWidgets.QDoubleSpinBox(self.options_box)
        self.depth_lim_m.setEnabled(False)
        self.depth_lim_m.setGeometry(QtCore.QRect(395, 70, 130, 32))
        self.depth_lim_m.setObjectName("depth_lim_m")
        self.depth_lim_combobox = QtWidgets.QComboBox(self.options_box)
        self.depth_lim_combobox.setGeometry(QtCore.QRect(255, 70, 130, 32))
        self.depth_lim_combobox.setObjectName("depth_lim_combobox")
        self.depth_lim_combobox.addItem("")
        self.depth_lim_combobox.addItem("")
        self.depth_lim_combobox.addItem("")
        self.label = QtWidgets.QLabel(self.options_box)
        self.label.setGeometry(QtCore.QRect(115, 70, 130, 32))
        self.label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label.setAutoFillBackground(False)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.output_box = QtWidgets.QGroupBox(self.centralwidget)
        self.output_box.setGeometry(QtCore.QRect(788, 10, 768, 831))
        self.output_box.setAutoFillBackground(False)
        self.output_box.setAlignment(QtCore.Qt.AlignCenter)
        self.output_box.setObjectName("output_box")
        self.output_img = QtWidgets.QLabel(self.output_box)
        self.output_img.setGeometry(QtCore.QRect(64, 50, 640, 480))
        self.output_img.setText("")
        self.output_img.setPixmap(QtGui.QPixmap("empty.png"))
        self.output_img.setScaledContents(True)
        self.output_img.setObjectName("output_img")
        self.save_img_btn = QtWidgets.QPushButton(self.output_box)
        self.save_img_btn.setGeometry(QtCore.QRect(249, 760, 130, 34))
        self.save_img_btn.setObjectName("save_img_btn")
        self.save_txt_btn = QtWidgets.QPushButton(self.output_box)
        self.save_txt_btn.setGeometry(QtCore.QRect(389, 760, 130, 34))
        self.save_txt_btn.setObjectName("save_txt_btn")
        self.textBrowser = QtWidgets.QTextBrowser(self.output_box)
        self.textBrowser.setGeometry(QtCore.QRect(64, 560, 640, 171))
        self.textBrowser.setObjectName("textBrowser")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1566, 30))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.load_model_btn.clicked.connect(self.press_load_model_btn)
        self.load_img_btn.clicked.connect(self.press_load_img_btn)
        self.depth_lim_combobox.currentTextChanged.connect(self.depth_lim_unlock)
        self.eval_btn.clicked.connect(self.press_eval_btn)
        self.save_img_btn.clicked.connect(self.press_save_img_btn)
        self.save_txt_btn.clicked.connect(self.press_save_txt_btn)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.input_box.setTitle(_translate("MainWindow", "Input"))
        self.load_model_btn.setText(_translate("MainWindow", "Load Model"))
        self.load_img_btn.setText(_translate("MainWindow", "Load Image"))
        self.eval_btn.setText(_translate("MainWindow", "Evaluate"))
        self.options_box.setTitle(_translate("MainWindow", "Options"))
        self.depth_lim_combobox.setItemText(0, _translate("MainWindow", "None"))
        self.depth_lim_combobox.setItemText(1, _translate("MainWindow", "Less than"))
        self.depth_lim_combobox.setItemText(2, _translate("MainWindow", "More than"))
        self.label.setText(_translate("MainWindow", "Depth Limitation (m):"))
        self.output_box.setTitle(_translate("MainWindow", "Output"))
        self.save_img_btn.setText(_translate("MainWindow", "Save Image"))
        self.save_txt_btn.setText(_translate("MainWindow", "Save Text"))
        self.textBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Noto Sans\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Detected Objects</p></body></html>"))

    def press_load_model_btn(self):
        options = QtWidgets.QFileDialog.Options()
        options |= QtWidgets.QFileDialog.DontUseNativeDialog
        self.model_addr, _ = QtWidgets.QFileDialog.getOpenFileName(self,"QtWidgets.QFileDialog.getOpenFileName()", "","Model Files (*.h5)", options=options)

    def press_load_img_btn(self):
        options = QtWidgets.QFileDialog.Options()
        options |= QtWidgets.QFileDialog.DontUseNativeDialog
        self.img_addr, _ = QtWidgets.QFileDialog.getOpenFileName(self,"QtWidgets.QFileDialog.getOpenFileName()", "","Image Files (*.jpg *.png)", options=options)
        if (self.img_addr):
            self.input_img.setPixmap(QtGui.QPixmap(self.img_addr))

    def depth_lim_unlock(self):
        if (self.depth_lim_combobox.currentText()=="None"):
            self.depth_lim_m.setEnabled(False)
        else:
            self.depth_lim_m.setEnabled(True)

    def press_eval_btn(self):
        if (self.model_addr and self.img_addr):
            depth_estimation(pretrained_model = self.model_addr, input_img = self.img_addr)
            if(self.depth_lim_combobox.currentText()=="Less than"):
                object_detection(input_img = self.img_addr, depth_lim = self.depth_lim_m.value(), lim_type = 1)
            elif(self.depth_lim_combobox.currentText()=="More than"):
                object_detection(input_img = self.img_addr, depth_lim = self.depth_lim_m.value(), lim_type = 2)
            else:
                object_detection(input_img = self.img_addr)

            self.output_img.setPixmap(QtGui.QPixmap("output.jpg"))
            with open("output.txt", "r") as filehandle:
                for line in filehandle:
                    currentObj = line[:-1]
                    self.textBrowser.append(currentObj)
        else:
            pass

    def press_save_img_btn(self):
        options = QtWidgets.QFileDialog.Options()
        options |= QtWidgets.QFileDialog.DontUseNativeDialog
        fileName, _ = QtWidgets.QFileDialog.getSaveFileName(self,"QtWidgets.QFileDialog.getSaveFileName()","output.jpg","Image Files (*.jpg)", options=options)
        if fileName:
            shutil.copyfile("output.jpg", fileName)

    def press_save_txt_btn(self):
        options = QtWidgets.QFileDialog.Options()
        options |= QtWidgets.QFileDialog.DontUseNativeDialog
        fileName, _ = QtWidgets.QFileDialog.getSaveFileName(self,"QtWidgets.QFileDialog.getSaveFileName()","output.txt","Text Files (*.txt)", options=options)
        if fileName:
            shutil.copyfile("output.txt", fileName)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
